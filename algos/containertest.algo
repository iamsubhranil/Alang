Set front = Null

Container Node(x)
    Set value = x
    Set next = Null
EndContainer

Routine insertAtEnd(x)
    If(front == Null)
        Set front = x
    Else
        Set bak = front
        While(bak.next != Null)
            Set bak = bak.next
        EndWhile
        Set bak.next = x
    EndIf
    Call Print("\nInsertion complete! ")
EndRoutine

Routine insertAtFront(x)
    Set x.next = front, front = x
    Call Print("\nInsertion complete! ")
EndRoutine

Routine deleteFromFront()
    If(front == Null)
        Call Print("\nList is empty! Unable to delete!")
    Else
        Set front = front.next
        Call Print("\nDeletion succeeded!")
    EndIf
EndRoutine

Routine deleteValue(x)
    Set bak = front
    If(front == Null)
        Call Print("\nList is empty! Unable to delete!")
        Return
    Else If(front.value == x)
        Call deleteFromFront()
        Return
    EndIf
    While(bak.next != Null)
        If(bak.next.value == x)
            Set bak.next = bak.next.next
            Call Print("\nDeletion succeeded!")
            Return
        EndIf
        Set bak = bak.next
    EndWhile
    Call Print("\nDeletion failed!")
EndRoutine

Routine deleteFromEnd()
    If(front == Null)
        Call Print("\nList is empty! Unable to delete!")
    Else If(front.next == Null)
        Call deleteFromFront()
    Else
        Set bak = front
        While(bak.next.next != Null)
            Set bak = bak.next
        EndWhile
        Set bak.next = bak.next.next
        Call Print("\nDeletion succeeded!")
    EndIf
EndRoutine

Routine insertAtPos(x, pos)
    If(pos == 1)
        Call insertAtFront(x)
        Return
    EndIf
    Set i = 1, bak = front
    While(i < (pos - 1) And bak != Null)
        Set bak = bak.next
        Set i = i+1
    EndWhile
    If(bak == Null)
        Call Print("\nInvalid position specified : ", pos)
    Else
        Set x.next = bak.next, bak.next = x
        Call Print("\nInsertion complete! ")
    EndIf
EndRoutine

Routine PrintList(x)
    If(x == Null)
        Call Print("\nEmpty list!")
        Return
    EndIf
    Set bak = x, i = 1
    While(bak != Null)
        Call Print("\nNode : ",i,"\tValue : ",bak.value)
        Set bak = bak.next, i = i+1
    EndWhile
EndRoutine

Routine NewNode()
    Call Print("\nEnter the value of the node : ")
    Input x:Int
    Return Node(x)
EndRoutine

Routine Main()
    //Set i = NewNode(5)
    //Call NewNode(6)
    //Set i = 0
    While(True)
        Call Print("\nSelect an operation : ")
        Call Print("\n1. Insert at front")
        Call Print("\n2. Insert at end")
        Call Print("\n3. Insert at position")
        Call Print("\n4. Print list")
        Call Print("\n5. Delete from front")
        Call Print("\n6. Delete from end")
        Call Print("\n7. Delete value : ")
        Input choice:Int
        If(choice < 1 Or choice > 7)
            Call Print("\nBad choice!\n")
            Break
        Else
            If(choice < 4)
                Set node = NewNode()
            EndIf
            If(choice == 1)
                Call insertAtFront(node)
            Else If(choice == 2)
                Call insertAtEnd(node)
            Else If(choice == 3)
                Call Print("\nEnter position to insert : ")
                Input pos:Int
                Call insertAtPos(node,pos)
            Else If(choice == 4)
                Call PrintList(front)
            Else If(choice == 5)
                Call deleteFromFront()
            Else If(choice == 6)
                Call deleteFromEnd()
            Else If(choice == 7)
                Call Print("\nEnter the value to delete : ")
                Input val:Int
                Call deleteValue(val)
            EndIf
            Call Print("\n")
        EndIf
    EndWhile
    //Set front = node, node = front
EndRoutine
